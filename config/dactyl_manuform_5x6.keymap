#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define SPLIT_WATCHDOG_ENABLE

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_LEFT";
            flavor = "hold-preferred";
            tapping-term-ms = <280>;

            //require-prior-idle-ms = <150>;
            //quick-tap-ms = <175>;

            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <52 53>; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_RIGHT";
            flavor = "balanced";

            //require-prior-idle-ms = <150>;

            tapping-term-ms = <280>;

            //quick-tap-ms = <175>;

            bindings = <&kp>, <&kp>;

            #binding-cells = <2>; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };

        test_behaviour: test_behaviour {
            compatible = "zmk,behavior-hold-tap";
            label = "TEST_BEHAVIOUR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <42 43 31 30 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47>;
            tapping-term-ms = <1000>;
        };
    };

    macros {
        change_language: change_language {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LWIN>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LWIN>;

            label = "CHANGE_LANGUAGE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none             &kp N1  &kp N2          &kp N3           &kp N4  &kp N5                                        &kp N6          &kp N7   &kp N8          &kp N9           &kp N0    &none
&none             &kp Q   &kp W           &kp F            &kp P   &kp G                                         &kp J           &kp L    &kp U           &kp Y            &kp SEMI  &none
&none             &kp A   &kp R           &kp S            &kp T   &kp D                                         &kp H           &kp N    &kp E           &kp I            &kp O     &none
&change_language  &kp Z   &kp X           &kp C            &kp V   &kp B                                         &kp K           &kp M    &kp COMMA       &kp DOT          &kp FSLH  &none
                          &kp LEFT_BRACE  &kp RIGHT_BRACE                                                                                 &kp LEFT_BRACE  &kp RIGHT_BRACE
                                                           &mo 1   &kp LC(BACKSPACE)                             &kp SPACE       &mo RSE
                                                                   &test_behaviour LSHIFT Z  &kp ESC  &kp ENTER  &kp LEFT_SHIFT
                                                                   &none                     &none    &none      &none
            >;
        };

        lower_layer {
            bindings = <
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                  &kp F6  &kp F7    &kp F8    &kp F9  &kp F10    &kp F11
&trans   &trans  &trans  &trans  &trans  &trans                  &trans  &trans    &trans    &trans  &trans     &trans
&trans   &trans  &trans  &trans  &trans  &trans                  &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
&trans   &trans  &trans  &trans  &trans  &trans                  &trans  &trans    &trans    &trans  &trans     &trans
                 &trans  &trans                                                    &trans    &trans
                                 &trans  &trans                  &trans  &mo ADJ
                                         &trans  &trans  &trans  &trans
                                         &trans  &trans  &trans  &trans
            >;
        };

        raise_layer {
            bindings = <
&kp F12  &kp F1    &kp F2    &kp F3  &kp F4     &kp F5                         &kp F6    &kp F7    &kp F8                &kp F9                 &kp F10    &kp F11
&trans   &trans    &trans    &trans  &trans     &trans                         &trans    &trans    &kp LNLCK             &kp INS                &kp SLCK   &kp K_MUTE
&trans   &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp LBKT                       &kp RBKT  &kp LEFT  &kp DOWN              &kp UP                 &kp RIGHT  &kp K_VOL_UP
&trans   &trans    &trans    &trans  &trans     &trans                         &trans    &trans    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans     &kp K_VOL_DN
                   &trans    &trans                                                                &kp LEFT_BRACKET      &kp RIGHT_BRACKET
                                     &mo ADJ    &kp BACKSPACE                  &trans    &trans
                                                &trans         &trans  &trans  &trans
                                                &trans         &trans  &trans  &trans
            >;
        };

        adjust_layer {
            bindings = <
&none   &bt BT_SEL 0  &out OUT_BLE  &none  &none  &none                &none  &none  &none  &none  &none  &none
&none   &bt BT_SEL 1  &out OUT_USB  &none  &none  &none                &none  &none  &none  &none  &none  &none
&none   &bt BT_SEL 2  &none         &none  &none  &none                &none  &none  &none  &none  &none  &none
&trans  &bt BT_SEL 3  &bt BT_CLR    &none  &none  &none                &none  &none  &none  &none  &none  &none
                      &none         &none                                            &none  &none
                                           &none  &none                &none  &none
                                                  &none  &none  &none  &none
                                                  &none  &none  &none  &none
            >;
        };
    };
};
